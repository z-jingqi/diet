/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as LoginRouteImport } from './routes/login'
import { Route as KitchenToolsRouteImport } from './routes/kitchen-tools'
import { Route as FavoritesRouteImport } from './routes/favorites'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RecipeIdRouteImport } from './routes/recipe.$id'

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const KitchenToolsRoute = KitchenToolsRouteImport.update({
  id: '/kitchen-tools',
  path: '/kitchen-tools',
  getParentRoute: () => rootRouteImport,
} as any)
const FavoritesRoute = FavoritesRouteImport.update({
  id: '/favorites',
  path: '/favorites',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RecipeIdRoute = RecipeIdRouteImport.update({
  id: '/recipe/$id',
  path: '/recipe/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/favorites': typeof FavoritesRoute
  '/kitchen-tools': typeof KitchenToolsRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/recipe/$id': typeof RecipeIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/favorites': typeof FavoritesRoute
  '/kitchen-tools': typeof KitchenToolsRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/recipe/$id': typeof RecipeIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/favorites': typeof FavoritesRoute
  '/kitchen-tools': typeof KitchenToolsRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/recipe/$id': typeof RecipeIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/favorites'
    | '/kitchen-tools'
    | '/login'
    | '/profile'
    | '/recipe/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/favorites'
    | '/kitchen-tools'
    | '/login'
    | '/profile'
    | '/recipe/$id'
  id:
    | '__root__'
    | '/'
    | '/favorites'
    | '/kitchen-tools'
    | '/login'
    | '/profile'
    | '/recipe/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FavoritesRoute: typeof FavoritesRoute
  KitchenToolsRoute: typeof KitchenToolsRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  RecipeIdRoute: typeof RecipeIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/kitchen-tools': {
      id: '/kitchen-tools'
      path: '/kitchen-tools'
      fullPath: '/kitchen-tools'
      preLoaderRoute: typeof KitchenToolsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/favorites': {
      id: '/favorites'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof FavoritesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recipe/$id': {
      id: '/recipe/$id'
      path: '/recipe/$id'
      fullPath: '/recipe/$id'
      preLoaderRoute: typeof RecipeIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FavoritesRoute: FavoritesRoute,
  KitchenToolsRoute: KitchenToolsRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  RecipeIdRoute: RecipeIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
